using System.Collections;
using System.Collections.Generic;
using System.IO;
using TMPro;
using UnityEngine;

public class CentrelineManager : MonoBehaviour
{
    [SerializeField] string centrelinesPath;
    [SerializeField] GameObject centrelinesPrefab;
    [SerializeField] Material centrelineActiveMaterial;
    [SerializeField] Material centrelineUnactiveMaterial;
    [SerializeField] private GameObject activeCentreline;
    public List<GameObject> centrelinesList = new List<GameObject>();
    public List<GameObject> activeToggleCentrelinesList = new List<GameObject>();
    private string[] centrelineStrings =    { "16.6402 88.9556 -138.248 16.6375 88.9602 -138.249 16.6296 88.9741 -138.25 \r\n16.6166 88.997 -138.253 16.5985 89.0288 -138.256 16.5755 89.0694 -138.261 \r\n16.5476 89.1185 -138.266 16.515 89.1762 -138.273 16.4777 89.2421 -138.28 \r\n16.4359 89.3162 -138.288 16.3896 89.3984 -138.297 16.3389 89.4884 -138.307 \r\n16.284 89.5861 -138.317 16.225 89.6915 -138.329 16.1619 89.8042 -138.341 \r\n16.0948 89.9243 -138.354 16.0239 90.0514 -138.368 15.9492 90.1856 -138.382 \r\n15.8709 90.3266 -138.397 15.789 90.4743 -138.413 15.7036 90.6286 -138.429 \r\n15.6149 90.7893 -138.446 15.5229 90.9562 -138.464 15.4277 91.1292 -138.482 \r\n15.3295 91.3082 -138.5 15.2283 91.493 -138.52 15.1242 91.6835 -138.539 \r\n15.0173 91.8794 -138.559 14.9078 92.0808 -138.58 14.7957 92.2874 -138.601 \r\n14.6812 92.499 -138.623 14.5642 92.7156 -138.645 14.445 92.937 -138.667 \r\n14.3236 93.163 -138.689 14.2001 93.3935 -138.712 14.0746 93.6283 -138.736 \r\n13.9473 93.8674 -138.759 13.8182 94.1104 -138.783 13.6873 94.3574 -138.807 \r\n13.5549 94.6081 -138.831 13.4211 94.8625 -138.856 13.2858 95.1203 -138.88 \r\n13.1492 95.3814 -138.905 13.0115 95.6456 -138.93 12.8726 95.9129 -138.955 \r\n12.7328 96.1831 -138.98 12.5921 96.4559 -139.005 12.4505 96.7314 -139.031 \r\n12.3083 97.0093 -139.056 12.1655 97.2894 -139.081 12.0222 97.5717 -139.107 \r\n11.8785 97.856 -139.132 11.7344 98.1421 -139.157 11.5902 98.4299 -139.182 \r\n11.4459 98.7192 -139.207 11.3016 99.01 -139.232 11.1574 99.302 -139.256 \r\n11.0133 99.5951 -139.281 10.8696 99.8891 -139.305 10.7262 100.184 -139.329 \r\n10.5834 100.48 -139.353 10.4411 100.776 -139.377 10.2995 101.072 -139.4 \r\n10.1587 101.369 -139.423 10.0188 101.665 -139.446 9.87989 101.962 -139.468 \r\n9.74204 102.258 -139.49 9.60538 102.554 -139.512 9.47001 102.85 -139.533 \r\n9.33601 103.145 -139.554 9.20349 103.439 -139.574 9.07255 103.732 -139.594 \r\n8.94328 104.024 -139.613 8.81579 104.314 -139.632 8.69018 104.604 -139.65 \r\n8.56654 104.892 -139.668 8.44497 105.178 -139.685 8.32557 105.462 -139.701 \r\n8.20844 105.744 -139.717 8.09368 106.024 -139.732 7.98139 106.302 -139.747 \r\n7.87166 106.577 -139.76 7.7646 106.85 -139.774 7.6603 107.12 -139.786 \r\n7.55887 107.387 -139.797 7.46039 107.652 -139.808 7.36498 107.913 -139.818 \r\n7.27273 108.17 -139.827 7.18373 108.425 -139.836 7.0981 108.675 -139.843 \r\n7.01592 108.922 -139.85 6.93729 109.165 -139.855 6.86232 109.404 -139.86 \r\n6.7911 109.639 -139.864 6.72373 109.869 -139.867 6.66031 110.095 -139.868 \r\n6.60094 110.316 -139.869 6.54572 110.533 -139.869 6.49474 110.744 -139.867 \r\n6.44812 110.951 -139.865 6.40593 111.152 -139.861 6.36829 111.348 -139.857 \r\n6.33529 111.538 -139.851 6.30704 111.723 -139.844 6.28362 111.902 -139.835 \r\n6.26514 112.075 -139.826 6.2517 112.242 -139.815 6.24339 112.402 -139.803 \r\n6.24032 112.556 -139.79 6.24259 112.704 -139.775 6.25029 112.845 -139.76 \r\n6.26352 112.979 -139.742 6.28238 113.106 -139.724 6.30697 113.226 -139.704 \r\n6.33739 113.338 -139.682 6.37374 113.443 -139.659 6.41611 113.541 -139.635 \r\n6.46461 113.631 -139.609 6.51933 113.713 -139.582 6.58037 113.787 -139.553 \r\n6.64784 113.852 -139.523 6.72182 113.91 -139.491 6.80243 113.959 -139.457 \r\n6.88975 113.999 -139.422 6.9839 114.031 -139.385 7.08495 114.054 -139.347 \r\n7.19302 114.067 -139.306 7.30821 114.072 -139.264 7.43061 114.067 -139.221 \r\n7.56032 114.052 -139.176 7.69744 114.028 -139.128 7.84206 113.994 -139.08 \r\n7.9943 113.951 -139.029 8.15415 113.897 -138.976 8.32094 113.835 -138.923 \r\n8.49373 113.765 -138.869 8.67157 113.69 -138.815 8.85353 113.612 -138.762 \r\n9.03865 113.531 -138.712 9.22599 113.45 -138.664 9.4146 113.371 -138.619 \r\n9.60355 113.294 -138.578 9.79205 113.222 -138.543 9.98005 113.154 -138.511 \r\n10.1677 113.088 -138.483 10.3551 113.026 -138.457 10.5423 112.964 -138.433 \r\n10.7295 112.904 -138.41 10.9169 112.843 -138.387 11.1045 112.782 -138.364 \r\n11.2924 112.719 -138.338 11.4802 112.654 -138.31 11.6671 112.588 -138.277 \r\n11.8525 112.522 -138.238 12.0357 112.455 -138.192 12.216 112.388 -138.137 \r\n12.3929 112.321 -138.072 12.5661 112.254 -137.997 12.7358 112.188 -137.914 \r\n12.9021 112.122 -137.823 13.0653 112.056 -137.727 13.2256 111.99 -137.627 \r\n13.3832 111.925 -137.522 13.5387 111.859 -137.415 13.6922 111.793 -137.305 \r\n13.8441 111.727 -137.193 13.9948 111.66 -137.079 14.1446 111.593 -136.965 \r\n14.2938 111.525 -136.85 14.4427 111.456 -136.735 14.5918 111.386 -136.621 \r\n14.7413 111.316 -136.508 14.8916 111.244 -136.397 15.043 111.171 -136.289 \r\n15.1958 111.096 -136.183 15.3504 111.02 -136.081 15.5068 110.943 -135.982 \r\n15.6648 110.864 -135.887 15.8246 110.785 -135.794 15.9858 110.705 -135.704 \r\n16.1486 110.625 -135.617 16.3127 110.544 -135.532 16.4781 110.463 -135.449 \r\n16.6449 110.382 -135.368 16.8127 110.302 -135.289 16.9817 110.222 -135.211 \r\n17.1517 110.143 -135.135 17.3226 110.065 -135.059 17.4944 109.989 -134.985 \r\n17.667 109.913 -134.911 17.8403 109.84 -134.837 18.0142 109.768 -134.764 \r\n18.1887 109.699 -134.69 18.3637 109.631 -134.616 18.5391 109.567 -134.542 \r\n18.7148 109.505 -134.467 18.8908 109.446 -134.391 19.0669 109.39 -134.314 \r\n19.2431 109.337 -134.235 19.4194 109.288 -134.155 19.5956 109.243 -134.073 \r\n19.7717 109.202 -133.989 19.9476 109.165 -133.903 20.1232 109.133 -133.815 \r\n20.2984 109.105 -133.723 20.4732 109.082 -133.629 20.6485 109.064 -133.534 \r\n20.826 109.051 -133.443 21.0062 109.041 -133.357 21.185 109.025 -133.268 \r\n21.3649 109.008 -133.183 21.5475 108.991 -133.103 21.732 108.975 -133.027 \r\n21.9176 108.959 -132.954 22.1033 108.942 -132.881 22.2885 108.924 -132.808 \r\n22.4723 108.903 -132.731 22.6541 108.881 -132.65 22.8342 108.861 -132.566 \r\n23.0127 108.847 -132.476 23.1903 108.83 -132.386 23.3669 108.809 -132.294 \r\n23.5422 108.788 -132.199 23.7159 108.769 -132.102 23.8878 108.754 -132 \r\n24.0575 108.747 -131.894 24.2224 108.749 -131.781 24.376 108.76 -131.653 \r\n24.5238 108.772 -131.519 24.6694 108.784 -131.382 24.8148 108.796 -131.245 \r\n24.9619 108.808 -131.11 25.1125 108.821 -130.979 25.2669 108.834 -130.852 \r\n25.4207 108.849 -130.725 25.5729 108.865 -130.596 25.724 108.881 -130.466 \r\n25.8744 108.899 -130.336 26.0244 108.917 -130.204 26.1744 108.937 -130.073 \r\n26.3249 108.957 -129.943 26.4756 108.978 -129.813 26.6258 108.999 -129.682 \r\n26.7749 109.018 -129.551 26.9221 109.037 -129.416 27.0667 109.053 -129.279 \r\n27.209 109.067 -129.139 27.3503 109.079 -128.998 27.4919 109.091 -128.857 \r\n27.6352 109.102 -128.718 27.7816 109.114 -128.582 27.9316 109.127 -128.451 \r\n28.0842 109.141 -128.322 28.2382 109.157 -128.195 28.3924 109.173 -128.069 \r\n28.5458 109.191 -127.941 28.6975 109.209 -127.812 28.8475 109.229 -127.681 \r\n28.996 109.25 -127.549 29.1433 109.271 -127.416 29.2896 109.293 -127.281 \r\n29.4351 109.316 -127.146 29.58 109.339 -127.009 29.7246 109.362 -126.873 \r\n29.869 109.385 -126.736 30.0136 109.408 -126.6 30.1584 109.431 -126.463 \r\n30.3038 109.453 -126.328 30.4494 109.475 -126.192 30.5945 109.495 -126.056 \r\n30.7385 109.514 -125.918 30.8807 109.53 -125.778 31.0203 109.543 -125.636 \r\n31.1557 109.556 -125.489 31.2927 109.571 -125.344 31.4396 109.59 -125.21 \r\n31.5873 109.616 -125.077 31.734 109.647 -124.945 31.8793 109.68 -124.811 \r\n32.0231 109.711 -124.675 32.165 109.738 -124.537 32.3054 109.759 -124.396 \r\n32.4446 109.779 -124.254 32.5833 109.798 -124.111 32.722 109.821 -123.968 \r\n32.8609 109.848 -123.826 32.999 109.877 -123.684 33.1352 109.906 -123.54 \r\n33.2684 109.931 -123.393 33.3975 109.95 -123.242 33.5239 109.964 -123.087 \r\n33.66 109.987 -122.943 33.8011 110.012 -122.803 33.9413 110.033 -122.661 \r\n34.0804 110.052 -122.519 34.2187 110.072 -122.376 34.3565 110.097 -122.233 \r\n34.4944 110.126 -122.091 34.6331 110.156 -121.95 34.7733 110.184 -121.81 \r\n34.9157 110.208 -121.672 35.0601 110.225 -121.534 35.2052 110.239 -121.397 \r\n35.3494 110.252 -121.259 35.4917 110.266 -121.119 35.6325 110.278 -120.977 \r\n35.7733 110.287 -120.835 35.9155 110.288 -120.695 36.0595 110.279 -120.556 \r\n36.2044 110.26 -120.419 36.3493 110.231 -120.284 36.4923 110.193 -120.149 \r\n36.6306 110.15 -120.011 36.7619 110.105 -119.867 36.8885 110.056 -119.72 \r\n37.0157 110.001 -119.575 37.1445 109.938 -119.436 37.2695 109.869 -119.296 \r\n37.3944 109.799 -119.156 37.5218 109.722 -119.022 37.652 109.642 -118.893 \r\n37.7844 109.571 -118.762 37.9182 109.515 -118.624 38.053 109.471 -118.482 \r\n38.1897 109.428 -118.343 38.329 109.376 -118.209 38.4719 109.315 -118.083 \r\n38.6189 109.253 -117.962 38.7674 109.189 -117.844 38.914 109.122 -117.726 \r\n39.0559 109.05 -117.605 39.1935 108.973 -117.482 39.3288 108.893 -117.358 \r\n39.4639 108.81 -117.236 39.6007 108.726 -117.116 39.742 108.647 -116.998 \r\n39.8878 108.576 -116.881 40.034 108.504 -116.765 40.1771 108.427 -116.648 \r\n40.3192 108.351 -116.53 40.4642 108.286 -116.408 40.6111 108.222 -116.288 \r\n40.7588 108.154 -116.171 40.9074 108.083 -116.058 41.057 108.01 -115.947 \r\n41.2077 107.936 -115.838 41.3597 107.861 -115.732 41.5129 107.784 -115.629 \r\n41.6675 107.7 -115.533 41.8252 107.627 -115.437 41.988 107.588 -115.33 \r\n42.1543 107.57 -115.217 42.3227 107.555 -115.105 42.4916 107.529 -115 \r\n42.6602 107.483 -114.903 42.8286 107.426 -114.811 42.9971 107.363 -114.72 \r\n43.1658 107.302 -114.629 43.3355 107.244 -114.537 43.5069 107.19 -114.446 \r\n43.6806 107.142 -114.358 43.8574 107.101 -114.274 44.0379 107.067 -114.196 \r\n44.2229 107.042 -114.126 44.4114 107.024 -114.061 44.5987 107.007 -113.992 \r\n44.7849 106.988 -113.921 44.972 106.972 -113.853 45.1612 106.959 -113.79 \r\n45.3519 106.948 -113.731 45.543 106.938 -113.671 45.7334 106.927 -113.61 \r\n45.9223 106.912 -113.545 46.1092 106.89 -113.477 46.2934 106.856 -113.407 \r\n46.4749 106.816 -113.333 46.6546 106.784 -113.251 46.8348 106.76 -113.166 \r\n47.0181 106.735 -113.09 47.2067 106.699 -113.033 47.3908 106.63 -113 \r\n47.5686 106.542 -112.972 47.7464 106.458 -112.932 47.9233 106.376 -112.889 \r\n48.0979 106.287 -112.848 48.269 106.19 -112.813 48.4359 106.088 -112.77 \r\n48.602 105.988 -112.721 48.772 105.894 -112.673 48.9473 105.806 -112.632 \r\n49.1202 105.711 -112.599 49.2907 105.612 -112.565 49.4605 105.516 -112.521 \r\n49.6274 105.416 -112.474 49.787 105.303 -112.434 49.94 105.179 -112.398 \r\n50.0915 105.053 -112.36 50.2464 104.932 -112.325 50.4084 104.819 -112.294 \r\n50.572 104.707 -112.266 50.7289 104.586 -112.241 50.883 104.462 -112.21 \r\n51.0359 104.339 -112.171 51.1826 104.208 -112.133 51.3271 104.073 -112.104 \r\n51.4753 103.94 -112.082 51.6187 103.803 -112.06 51.7577 103.66 -112.04 \r\n51.8932 103.514 -112.021 52.026 103.365 -112.004 52.1569 103.214 -111.99 \r\n52.2866 103.062 -111.973 52.4165 102.913 -111.946 52.5493 102.766 -111.917 \r\n52.6824 102.619 -111.889 52.8125 102.47 -111.861 52.9369 102.315 -111.836 \r\n53.0573 102.157 -111.813 53.1771 101.998 -111.794 53.2984 101.839 -111.781 \r\n53.4205 101.68 -111.773 53.542 101.521 -111.767 53.662 101.36 -111.762 \r\n53.7793 101.198 -111.758 53.8926 101.033 -111.753 54.0009 100.865 -111.745 \r\n54.1031 100.694 -111.734 54.2006 100.52 -111.718 54.2979 100.346 -111.697 \r\n54.3928 100.172 -111.671 54.482 99.9955 -111.641 54.5627 99.8148 -111.612 \r\n54.6413 99.6336 -111.581 54.7275 99.4594 -111.533 54.8085 99.3003 -111.443 \r\n54.8848 99.1406 -111.349 54.958 98.9768 -111.26 55.0276 98.8113 -111.172 \r\n55.0926 98.6466 -111.079 55.1528 98.4837 -110.98 55.2093 98.3181 -110.882 \r\n55.2634 98.145 -110.798 55.3147 97.9726 -110.711 55.3617 97.8088 -110.606 \r\n55.403 97.6442 -110.5 55.4413 97.4736 -110.402 55.4841 97.2988 -110.315 \r\n55.5373 97.1229 -110.235 55.595 96.9527 -110.147 55.6493 96.7899 -110.044 \r\n55.7005 96.6175 -109.957 55.7479 96.4461 -109.865 55.787 96.2832 -109.756 \r\n55.8194 96.1241 -109.639 55.8544 95.9591 -109.531 55.8934 95.7856 -109.44 \r\n55.93 95.6074 -109.355 55.958 95.4285 -109.27 55.9803 95.2507 -109.181 \r\n56.006 95.0743 -109.09 56.0416 94.899 -109.001 56.084 94.7239 -108.914 \r\n56.1277 94.5475 -108.83 56.1695 94.3692 -108.749 56.2127 94.1906 -108.67 \r\n56.2621 94.0138 -108.59 56.3169 93.8389 -108.51 56.363 93.6616 -108.43 \r\n56.4007 93.4816 -108.351 56.4408 93.3012 -108.275 56.489 93.1219 -108.2 \r\n56.5445 92.9442 -108.127 56.6056 92.7682 -108.053 56.6719 92.5937 -107.98 \r\n56.7465 92.4193 -107.918 56.8303 92.2446 -107.869 56.9207 92.0706 -107.828 \r\n57.0147 91.8983 -107.786 57.1117 91.7291 -107.74 57.2155 91.5644 -107.694 \r\n57.329 91.405 -107.653 57.4362 91.2432 -107.606 57.5335 91.0773 -107.55 \r\n57.6319 90.9127 -107.491 57.7361 90.7514 -107.432 57.8469 90.5936 -107.379 \r\n57.9651 90.439 -107.334 58.0905 90.2874 -107.299 58.2192 90.1365 -107.272 \r\n58.3465 89.9833 -107.251 58.4676 89.825 -107.23 58.581 89.6613 -107.208 \r\n58.6979 89.5009 -107.194 58.8235 89.3474 -107.189 58.9545 89.1979 -107.19 \r\n59.0875 89.0491 -107.192 59.219 88.8977 -107.192 59.3457 88.7406 -107.186 \r\n59.4641 88.5747 -107.169 59.5793 88.4103 -107.171 59.6827 88.2414 -107.175 \r\n59.7733 88.0628 -107.158 59.8663 87.8876 -107.151 59.9671 87.7163 -107.156 \r\n60.0715 87.5457 -107.166 60.1661 87.3694 -107.166 60.2639 87.1951 -107.159 \r\n60.3678 87.0242 -107.151 60.4729 86.854 -107.141 60.574 86.6818 -107.13 \r\n60.6669 86.505 -107.12 60.7581 86.327 -107.111 60.8539 86.1514 -107.103 \r\n60.9531 85.978 -107.093 61.0545 85.8064 -107.078 61.1564 85.6347 -107.046 \r\n61.2601 85.4638 -107.003 61.3688 85.2965 -106.965 61.4854 85.1356 -106.947 \r\n61.6128 84.9838 -106.967 61.74 84.8333 -107.008 61.8338 84.6584 -106.985 \r\n61.9367 84.4887 -106.955 62.0436 84.3213 -106.93 62.1451 84.1498 -106.918 \r\n62.2348 83.972 -106.932 62.313 83.7899 -106.957 62.4008 83.6102 -106.967 \r\n62.4837 83.4288 -106.981 62.5559 83.2434 -107 62.622 83.0556 -107.022 \r\n62.6868 82.867 -107.043 62.7551 82.6794 -107.056 62.8299 82.4939 -107.062 \r\n62.9087 82.3097 -107.063 62.9878 82.1258 -107.066 63.0635 81.9412 -107.076 \r\n63.1335 81.7553 -107.097 63.2029 81.5696 -107.125 63.2791 81.3862 -107.152 \r\n63.3634 81.2056 -107.173 63.452 81.0263 -107.183 63.5398 80.8466 -107.18 \r\n63.6126 80.6602 -107.184 63.6693 80.4686 -107.2 63.7182 80.2752 -107.221 \r\n63.7701 80.0829 -107.236 63.8343 79.8945 -107.238 63.9097 79.7094 -107.229 \r\n63.9883 79.5249 -107.221 64.0624 79.3388 -107.225 64.1347 79.1545 -107.253 \r\n64.2194 78.9775 -107.291 64.3029 78.7966 -107.308 64.3855 78.6161 -107.333 \r\n64.4771 78.4406 -107.363 64.5763 78.2756 -107.421 64.6792 78.1268 -107.507 \r\n64.7843 77.9943 -107.614 64.8952 77.8675 -107.723 64.9976 77.7264 -107.819 \r\n65.0811 77.5675 -107.909 65.1724 77.4245 -108.016 65.2729 77.2847 -108.12 \r\n65.3832 77.1466 -108.216 65.5042 77.0106 -108.3 65.6369 76.8766 -108.369 \r\n65.7706 76.7373 -108.422 65.8736 76.5728 -108.469 65.9697 76.4021 -108.512 \r\n66.0647 76.2355 -108.567 66.176 76.078 -108.618 66.3006 75.9225 -108.647 \r\n66.4316 75.7767 -108.689 66.5453 75.6305 -108.763 66.6463 75.471 -108.827 \r\n66.7679 75.3258 -108.89 66.8717 75.1786 -108.975 66.991 75.0404 -109.059 \r\n67.1179 74.8923 -109.112 67.254 74.7491 -109.142 67.4031 74.6173 -109.155 \r\n67.5703 74.4649 -109.148 67.7503 74.2897 -109.123 67.9344 74.1028 -109.086 \r\n68.114 73.9148 -109.041 68.2804 73.7367 -108.993 68.4249 73.5793 -108.948 \r\n68.5389 73.4535 -108.909 68.6137 73.37 -108.882 68.6405 73.3398 -108.872" };

    private bool isContoursRendered = false;
    private GameObject tempCentreline;

    public struct Point
    {
        //Variable declaration
        //Note: I'm explicitly declaring them as public, but they are public by default. You can use private if you choose.
        public double coordx;
        public double coordy;
        public double coordz;

        //Constructor (not necessary, but helpful)
        public Point(double coordx, double coordy, double coordz)
        {
            this.coordx = coordx;
            this.coordy = coordy;
            this.coordz = coordz;
        }
    }

    private static CentrelineManager _instance;

    

    public static CentrelineManager Instance
    {
        get { return _instance; }
    }

    public GameObject GetActiveCentreline()
    {
        return activeCentreline;
    }

    public void SetActiveCentreline(GameObject centreline)
    {

        if (activeCentreline)
        {
            activeCentreline.GetComponent<CentrelineRenderer>().SetMaterial(centrelineUnactiveMaterial);
            
        }
        if(centreline)
        {
            if (centreline != activeCentreline)
            {
                activeCentreline = centreline;
                
                LAAMeasurementsManager.Instance.DeleteCentrelineMeasuresData();
                LAAMeasurementsManager.Instance.SetCurrentCentrelineMeasures();
                LAAMeasurementsManager.Instance.GenerateCentrelineMeasuresData();
                isContoursRendered = true;
            }
            else
            {
                activeCentreline = centreline;
            }
            
            //activeCentreline.GetComponent<CentrelineRenderer>().SetMaterial(centrelineActiveMaterial);

            
        }
        else
        {
            LAAMeasurementsManager.Instance.DeleteCentrelineMeasuresData();
            activeCentreline = null;
            LAAMeasurementsManager.Instance.activeCentrelineWarningUI.SetActive(true);
            LAAMeasurementsManager.Instance.noContoursWarningUI.SetActive(false);
        }
        
    }

    public void CheckActiveToggleCentrelines()
    {
        activeToggleCentrelinesList.Clear();
        for (int i = 0; centrelinesList.Count > i; i++) {

            if (centrelinesList[i].activeSelf)
            {
                activeToggleCentrelinesList.Add(centrelinesList[i]);
            }

        }
    }


    private void Awake()
    {
        _instance = this;
    }

    // Start is called before the first frame update (Dynamic version)
    /*void Start()
    {
        DirectoryInfo dir = new DirectoryInfo(centrelinesPath);
        FileInfo[] info = dir.GetFiles("*.txt");
        foreach (FileInfo f in info)
        {
            string name = f.Name.Split(".txt")[0];
            GameObject centrelineRender = Instantiate(centrelinesPrefab);
            centrelineRender.name = name + " Render";
            centrelineRender.transform.parent = this.transform;
            centrelineRender.GetComponent<CentrelineRenderer>().SetFilePathCentreline(f.FullName);
            centrelineRender.GetComponent<CentrelineRenderer>().Render();
            centrelineRender.GetComponent<CentrelineRenderer>().SetMaterial(centrelineUnactiveMaterial);

        }
    }*/

    //Hardcoded version
    void Start()
    {

        for (int i = 0; i < centrelineStrings.Length; i++)
        {
            GameObject centrelineRender = Instantiate(centrelinesPrefab);
            centrelineRender.name = "Centreline " + (i+1).ToString() + " Render";
            centrelineRender.transform.parent = this.transform;
            centrelineRender.GetComponent<CentrelineRenderer>().RenderHardcoded(centrelineStrings[i]);
            centrelineRender.GetComponent<CentrelineRenderer>().SetMaterial(centrelineUnactiveMaterial);
            tempCentreline = centrelineRender;

        }
    }

    // Update is called once per frame
    void Update()
    {
        if(!isContoursRendered)
        {
            SetActiveCentreline(tempCentreline);
            
        }
    }
}
